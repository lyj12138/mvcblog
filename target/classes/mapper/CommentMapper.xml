<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.CommentDao" >
  <resultMap id="BaseResultMap" type="com.blog.domain.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="reference" property="reference" jdbcType="BIGINT"/>
    <result column="floor" property="floor" jdbcType="BIGINT"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.blog.domain.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, date, name, nickname,reference,floor
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>

  <select id="queryAll" resultMap="ResultMapWithBLOBs"  >
    select *
    from comment
    where article_id = #{article_id}
    ORDER BY id
    LIMIT #{offset}, #{limit}
  </select>

  <select id="countAllNum" resultType="java.lang.Integer">
    SELECT count(*) FROM comment
  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.blog.domain.Comment" >
    insert into comment (id, article_id, date, 
      name, nickname, content,reference,floor
      )
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{date,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},#{reference,jdbcType=BIGINT},#{floor,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.domain.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reference != null" >
        reference,
      </if>
      <if test="floor != null" >
        floor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="reference != null" >
        #{reference,jdbcType=BIGINT},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.domain.Comment" >
    update comment
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        email = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="reference != null" >
        reference#{reference,jdbcType=BIGINT},
      </if>
      <if test="floor != null" >
       floor= #{floor,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.domain.Comment" >
    update comment
    set article_id = #{articleId,jdbcType=BIGINT},
      date = #{date,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      reference#{reference,jdbcType=BIGINT},
      floor= #{floor,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.domain.Comment" >
    update comment
    set article_id = #{articleId,jdbcType=BIGINT},
      date = #{date,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
     nickname = #{email,jdbcType=VARCHAR},
     reference#{reference,jdbcType=BIGINT},
     floor= #{floor,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>