<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.UserDao" >
    <resultMap id="BaseResultMap" type="com.blog.domain.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
    id, username, password,email,nickname,state
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByState" resultMap="BaseResultMap" parameterType="java.lang.String">
        select  * from user where state=#{state,jdbcType=VARCHAR}
    </select>
    <select id="queryAll" resultMap="BaseResultMap"  >
    select *
    from user
    ORDER BY id DESC
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <select id="getByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from user where email=#{email,jdbcType=VARCHAR}
    </select>
    <select id="getByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from user where username=#{username,jdbcType=VARCHAR}
    </select>
    <insert id="insert" parameterType="com.blog.domain.User" >
    insert into user (id, username, password,email,nickname,state
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{nickname,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.blog.domain.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="nickname != null" >
                nickname,
            </if>
            <if test="state!= null" >
               state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
            #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null" >
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
            #{state,jdbcType=VARCHAR},
            </if>
        </trim>

    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.blog.domain.User" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null" >
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="state != null" >
                #{state,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.blog.domain.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email=#{email,jdbcType=VARCHAR},
      nickname=#{nickname,jdbcType=VARCHAR},
      state=#{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>